"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["223003"],{142268:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>a,default:()=>d,assets:()=>l,toc:()=>c,frontMatter:()=>s});var r=JSON.parse('{"id":"sql-manual/sql-functions/aggregate-functions/orthogonal-bitmap-intersect-count","title":"orthogonal_bitmap_intersect_count","description":"\x3c!--","source":"@site/versioned_docs/version-2.1/sql-manual/sql-functions/aggregate-functions/orthogonal-bitmap-intersect-count.md","sourceDirName":"sql-manual/sql-functions/aggregate-functions","slug":"/sql-manual/sql-functions/aggregate-functions/orthogonal-bitmap-intersect-count","permalink":"/docs/sql-manual/sql-functions/aggregate-functions/orthogonal-bitmap-intersect-count","draft":false,"unlisted":false,"tags":[],"version":"2.1","frontMatter":{"title":"orthogonal_bitmap_intersect_count","language":"en"},"sidebar":"docs","previous":{"title":"orthogonal_bitmap_intersect","permalink":"/docs/sql-manual/sql-functions/aggregate-functions/orthogonal-bitmap-intersect"},"next":{"title":"orthogonal_bitmap_union_count","permalink":"/docs/sql-manual/sql-functions/aggregate-functions/orthogonal-bitmap-union-count"}}'),i=t("785893"),o=t("250065");let s={title:"orthogonal_bitmap_intersect_count",language:"en"},a=void 0,l={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Example",id:"example",level:2}];function u(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"The ORTHOGONAL_BITMAP_INTERSECT_COUNT function returns the number of elements in the set after performing an intersection calculation on the Bitmap expression."}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"ORTHOGONAL_BITMAP_INTERSECT_COUNT(<bitmap_column>, <column_to_filter>, <filter_values>)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameters"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<bitmap_column>"})}),(0,i.jsx)(n.td,{children:"The Bitmap type expression needs to be obtained"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<column_to_filter>"})}),(0,i.jsx)(n.td,{children:"Optional. The dimension column that needs to be filtered"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<filter_values>"})}),(0,i.jsx)(n.td,{children:"Optional. A variable-length parameter, used to filter different values of the dimension column"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)(n.p,{children:"Returns a value of type BIGINT."}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"select orthogonal_bitmap_intersect_count(members, tag_group, 1150000, 1150001, 390006) from tag_map where  tag_group in ( 1150000, 1150001, 390006);\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"+-------------------------------------------------------------------------------------+\n| orthogonal_bitmap_intersect_count(`members`, `tag_group`, 1150000, 1150001, 390006) |\n+-------------------------------------------------------------------------------------+\n|                                                                                   0 |\n+-------------------------------------------------------------------------------------+\n"})})]})}function d(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return s}});var r=t(667294);let i={},o=r.createContext(i);function s(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);