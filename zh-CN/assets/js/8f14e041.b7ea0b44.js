"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["317007"],{882161:function(n,e,s){s.r(e),s.d(e,{metadata:()=>a,contentTitle:()=>d,default:()=>p,assets:()=>c,toc:()=>r,frontMatter:()=>l});var a=JSON.parse('{"id":"sql-manual/sql-data-types/data-type-overview","title":"STRUCT","description":"\x3c!--","source":"@site/i18n/zh-CN/docusaurus-plugin-content-docs/version-3.0/sql-manual/sql-data-types/data-type-overview.md","sourceDirName":"sql-manual/sql-data-types","slug":"/sql-manual/sql-data-types/data-type-overview","permalink":"/zh-CN/docs/3.0/sql-manual/sql-data-types/data-type-overview","draft":false,"unlisted":false,"tags":[],"version":"3.0","frontMatter":{"title":"STRUCT","language":"zh-CN"},"sidebar":"docs","previous":{"title":"\u5E38\u89C1BI\u95EE\u9898","permalink":"/zh-CN/docs/3.0/faq/bi-faq"},"next":{"title":"BOOLEAN","permalink":"/zh-CN/docs/3.0/sql-manual/sql-data-types/numeric/BOOLEAN"}}'),t=s("785893"),i=s("250065");let l={title:"STRUCT",language:"zh-CN"},d=void 0,c={},r=[{value:"\u63CF\u8FF0",id:"\u63CF\u8FF0",level:2},{value:"\u4E3E\u4F8B",id:"\u4E3E\u4F8B",level:2}];function m(n){let e={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"\u63CF\u8FF0",children:"\u63CF\u8FF0"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.code,{children:"STRUCT<field_name:field_type [COMMENT 'comment_string'], ... >"})}),"\n",(0,t.jsx)(e.p,{children:"\u7531\u591A\u4E2A Field \u7EC4\u6210\u7684\u7ED3\u6784\u4F53\uFF0C\u4E5F\u53EF\u88AB\u7406\u89E3\u4E3A\u591A\u4E2A\u5217\u7684\u96C6\u5408\u3002\u4E0D\u80FD\u4F5C\u4E3A Key \u4F7F\u7528\uFF0C\u76EE\u524D STRUCT \u4EC5\u652F\u6301\u5728 Duplicate \u6A21\u578B\u7684\u8868\u4E2D\u4F7F\u7528\u3002"}),"\n",(0,t.jsx)(e.p,{children:"\u4E00\u4E2A Struct \u4E2D\u7684 Field \u7684\u540D\u5B57\u548C\u6570\u91CF\u56FA\u5B9A\uFF0C\u603B\u662F\u4E3A Nullable\uFF0C\u4E00\u4E2A Field \u901A\u5E38\u7531\u4E0B\u9762\u90E8\u5206\u7EC4\u6210\u3002"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"field_name: Field \u7684\u6807\u8BC6\u7B26\uFF0C\u4E0D\u53EF\u91CD\u590D"}),"\n",(0,t.jsx)(e.li,{children:"field_type: Field \u7684\u7C7B\u578B"}),"\n",(0,t.jsx)(e.li,{children:"COMMENT: Field \u7684\u6CE8\u91CA\uFF0C\u53EF\u9009 (\u6682\u4E0D\u652F\u6301)"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u5F53\u524D\u53EF\u652F\u6301\u7684\u7C7B\u578B\u6709\uFF1A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"BOOLEAN, TINYINT, SMALLINT, INT, BIGINT, LARGEINT, FLOAT, DOUBLE, DECIMAL, DECIMALV3, DATE,\nDATEV2, DATETIME, DATETIMEV2, CHAR, VARCHAR, STRING\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u5C06\u6765\u7684\u7248\u672C\u6211\u4EEC\u8FD8\u5C06\u5B8C\u5584\uFF1A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"TODO:\u652F\u6301\u5D4C\u5957 STRUCT \u6216\u5176\u4ED6\u7684\u590D\u6742\u7C7B\u578B\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u4E3E\u4F8B",children:"\u4E3E\u4F8B"}),"\n",(0,t.jsx)(e.p,{children:"\u5EFA\u8868\u793A\u4F8B\u5982\u4E0B\uFF1A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'mysql> CREATE TABLE `struct_test` (\n  `id` int(11) NULL,\n  `s_info` STRUCT<s_id:int(11), s_name:string, s_address:string> NULL\n) ENGINE=OLAP\nDUPLICATE KEY(`id`)\nCOMMENT \'OLAP\'\nDISTRIBUTED BY HASH(`id`) BUCKETS 1\nPROPERTIES (\n"replication_allocation" = "tag.location.default: 1",\n"storage_format" = "V2",\n"light_schema_change" = "true",\n"disable_auto_compaction" = "false"\n);\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u63D2\u5165\u6570\u636E\u793A\u4F8B\uFF1A"}),"\n",(0,t.jsx)(e.p,{children:"Insert:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"INSERT INTO `struct_test` VALUES (1, {1, 'sn1', 'sa1'});\nINSERT INTO `struct_test` VALUES (2, struct(2, 'sn2', 'sa2'));\nINSERT INTO `struct_test` VALUES (3, named_struct('s_id', 3, 's_name', 'sn3', 's_address', 'sa3'));\n"})}),"\n",(0,t.jsx)(e.p,{children:"Stream load:"}),"\n",(0,t.jsx)(e.p,{children:"test.csv:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'1|{"s_id":1, "s_name":"sn1", "s_address":"sa1"}\n2|{s_id:2, s_name:sn2, s_address:sa2}\n3|{"s_address":"sa3", "s_name":"sn3", "s_id":3}\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u793A\u4F8B\uFF1A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'curl --location-trusted -u root -T test.csv  -H "label:test_label" http://host:port/api/test/struct_test/_stream_load\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u67E5\u8BE2\u6570\u636E\u793A\u4F8B\uFF1A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"mysql> select * from struct_test;\n+------+-------------------+\n| id   | s_info            |\n+------+-------------------+\n|    1 | {1, 'sn1', 'sa1'} |\n|    2 | {2, 'sn2', 'sa2'} |\n|    3 | {3, 'sn3', 'sa3'} |\n+------+-------------------+\n3 rows in set (0.02 sec)\n"})}),"\n",(0,t.jsx)(e.p,{children:"map \u53D6\u503C\u793A\u4F8B\uFF1A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"mysql> SELECT m['a'] FROM simple_map;\n+-----------------------------+\n| %element_extract%(`m`, 'a') |\n+-----------------------------+\n|                         100 |\n|                        NULL |\n|                          10 |\n+-----------------------------+\n"})}),"\n",(0,t.jsx)(e.p,{children:"map \u652F\u6301\u7684 functions \u793A\u4F8B\uFF1A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"# map construct\n\nmysql> SELECT map('k11', 1000, 'k22', 2000)['k11'];\n+---------------------------------------------------------+\n| %element_extract%(map('k11', 1000, 'k22', 2000), 'k11') |\n+---------------------------------------------------------+\n|                                                    1000 |\n+---------------------------------------------------------+\n\nmysql> SELECT map('k11', 1000, 'k22', 2000)['nokey'];\n+-----------------------------------------------------------+\n| %element_extract%(map('k11', 1000, 'k22', 2000), 'nokey') |\n+-----------------------------------------------------------+\n|                                                      NULL |\n+-----------------------------------------------------------+\n1 row in set (0.06 sec)\n\n# map size\n\nmysql> SELECT map_size(map('k11', 1000, 'k22', 2000));\n+-----------------------------------------+\n| map_size(map('k11', 1000, 'k22', 2000)) |\n+-----------------------------------------+\n|                                       2 |\n+-----------------------------------------+\n\nmysql> SELECT id, m, map_size(m) FROM simple_map ORDER BY id;\n+------+-----------------------------+---------------+\n| id   | m                           | map_size(`m`) |\n+------+-----------------------------+---------------+\n|    1 | {\"a\":100, \"b\":200}          |             2 |\n|    2 | {\"b\":100, \"c\":200, \"d\":300} |             3 |\n|    2 | {\"a\":10, \"d\":200}           |             2 |\n+------+-----------------------------+---------------+\n3 rows in set (0.04 sec)\n\n# map_contains_key\n\nmysql> SELECT map_contains_key(map('k11', 1000, 'k22', 2000), 'k11');\n+--------------------------------------------------------+\n| map_contains_key(map('k11', 1000, 'k22', 2000), 'k11') |\n+--------------------------------------------------------+\n|                                                      1 |\n+--------------------------------------------------------+\n1 row in set (0.08 sec)\n\nmysql> SELECT id, m, map_contains_key(m, 'k1') FROM simple_map ORDER BY id;\n+------+-----------------------------+-----------------------------+\n| id   | m                           | map_contains_key(`m`, 'k1') |\n+------+-----------------------------+-----------------------------+\n|    1 | {\"a\":100, \"b\":200}          |                           0 |\n|    2 | {\"b\":100, \"c\":200, \"d\":300} |                           0 |\n|    2 | {\"a\":10, \"d\":200}           |                           0 |\n+------+-----------------------------+-----------------------------+\n3 rows in set (0.10 sec)\n\nmysql> SELECT id, m, map_contains_key(m, 'a') FROM simple_map ORDER BY id;\n+------+-----------------------------+----------------------------+\n| id   | m                           | map_contains_key(`m`, 'a') |\n+------+-----------------------------+----------------------------+\n|    1 | {\"a\":100, \"b\":200}          |                          1 |\n|    2 | {\"b\":100, \"c\":200, \"d\":300} |                          0 |\n|    2 | {\"a\":10, \"d\":200}           |                          1 |\n+------+-----------------------------+----------------------------+\n3 rows in set (0.17 sec)\n\n# map_contains_value\n\nmysql> SELECT map_contains_value(map('k11', 1000, 'k22', 2000), NULL);\n+---------------------------------------------------------+\n| map_contains_value(map('k11', 1000, 'k22', 2000), NULL) |\n+---------------------------------------------------------+\n|                                                       0 |\n+---------------------------------------------------------+\n1 row in set (0.04 sec)\n\nmysql> SELECT id, m, map_contains_value(m, '100') FROM simple_map ORDER BY id;\n+------+-----------------------------+------------------------------+\n| id   | m                           | map_contains_value(`m`, 100) |\n+------+-----------------------------+------------------------------+\n|    1 | {\"a\":100, \"b\":200}          |                            1 |\n|    2 | {\"b\":100, \"c\":200, \"d\":300} |                            1 |\n|    2 | {\"a\":10, \"d\":200}           |                            0 |\n+------+-----------------------------+------------------------------+\n3 rows in set (0.11 sec)\n\n# map_keys\n\nmysql> SELECT map_keys(map('k11', 1000, 'k22', 2000));\n+-----------------------------------------+\n| map_keys(map('k11', 1000, 'k22', 2000)) |\n+-----------------------------------------+\n| [\"k11\", \"k22\"]                          |\n+-----------------------------------------+\n1 row in set (0.04 sec)\n\nmysql> SELECT id, map_keys(m) FROM simple_map ORDER BY id;\n+------+-----------------+\n| id   | map_keys(`m`)   |\n+------+-----------------+\n|    1 | [\"a\", \"b\"]      |\n|    2 | [\"b\", \"c\", \"d\"] |\n|    2 | [\"a\", \"d\"]      |\n+------+-----------------+\n3 rows in set (0.19 sec)\n\n# map_values\n\nmysql> SELECT map_values(map('k11', 1000, 'k22', 2000));\n+-------------------------------------------+\n| map_values(map('k11', 1000, 'k22', 2000)) |\n+-------------------------------------------+\n| [1000, 2000]                              |\n+-------------------------------------------+\n1 row in set (0.03 sec)\n\nmysql> SELECT id, map_values(m) FROM simple_map ORDER BY id;\n+------+-----------------+\n| id   | map_values(`m`) |\n+------+-----------------+\n|    1 | [100, 200]      |\n|    2 | [100, 200, 300] |\n|    2 | [10, 200]       |\n+------+-----------------+\n3 rows in set (0.18 sec)\n\n"})})]})}function p(n={}){let{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(m,{...n})}):m(n)}},250065:function(n,e,s){s.d(e,{Z:function(){return d},a:function(){return l}});var a=s(667294);let t={},i=a.createContext(t);function l(n){let e=a.useContext(i);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);